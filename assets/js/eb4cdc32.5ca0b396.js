"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[54501],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>y});var i=t(296540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},s=Object.keys(e);for(i=0;i<s.length;i++)t=s[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)t=s[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),p=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return i.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=p(t),f=r,y=u["".concat(l,".").concat(f)]||u[f]||d[f]||s;return t?i.createElement(y,o(o({ref:n},c),{},{components:t})):i.createElement(y,o({ref:n},c))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=f;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a[u]="string"==typeof e?e:r,o[1]=a;for(var p=2;p<s;p++)o[p]=t[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},382940:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var i=t(58168),r=(t(296540),t(15680));const s={title:"IS_IPV4_STRING",language:"en"},o=void 0,a={unversionedId:"sql-manual/sql-functions/ip-functions/is-ipv4-string",id:"version-2.1/sql-manual/sql-functions/ip-functions/is-ipv4-string",title:"IS_IPV4_STRING",description:"\x3c!--",source:"@site/versioned_docs/version-2.1/sql-manual/sql-functions/ip-functions/is-ipv4-string.md",sourceDirName:"sql-manual/sql-functions/ip-functions",slug:"/sql-manual/sql-functions/ip-functions/is-ipv4-string",permalink:"/docs/sql-manual/sql-functions/ip-functions/is-ipv4-string",draft:!1,tags:[],version:"2.1",frontMatter:{title:"IS_IPV4_STRING",language:"en"},sidebar:"docs",previous:{title:"IS_IP_ADDRESS_IN_RANGE",permalink:"/docs/sql-manual/sql-functions/ip-functions/is-ip-address-in-range"},next:{title:"IS_IPV6_STRING",permalink:"/docs/sql-manual/sql-functions/ip-functions/is-ipv6-string"}},l={},p=[{value:"IS_IPV4_STRING",id:"is_ipv4_string",level:2},{value:"description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"notice",id:"notice",level:3},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}],c={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,r.yg)(u,(0,i.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"is_ipv4_string"},"IS_IPV4_STRING"),(0,r.yg)("version",{since:"dev"},(0,r.yg)("p",null,"IS_IPV4_STRING")),(0,r.yg)("h3",{id:"description"},"description"),(0,r.yg)("h4",{id:"syntax"},"Syntax"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"BOOLEAN IS_IPV4_STRING(STRING ipv4_str)")),(0,r.yg)("p",null,"Receive an IPv4 address in the form of a string as a parameter. If it is a correctly formatted and valid IPv4 address, return true; On the contrary, return false."),(0,r.yg)("h3",{id:"notice"},"notice"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"If the input parameter is NULL, return NULL, indicating invalid input")),(0,r.yg)("h3",{id:"example"},"example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"mysql> select is_ipv4_string(NULL);\n+----------------------+\n| is_ipv4_string(NULL) |\n+----------------------+\n|                 NULL |\n+----------------------+\n\nmysql> CREATE TABLE `test_is_ipv4_string` (\n      `id` int,\n      `ip_v4` string\n    ) ENGINE=OLAP\n    DISTRIBUTED BY HASH(`id`) BUCKETS 4\n    PROPERTIES (\n    \"replication_allocation\" = \"tag.location.default: 1\"\n    );\n    \nmysql> insert into test_is_ipv4_string values(0, NULL), (1, '0.0.0.'), (2, ''), (3, '.'), (4, '255.255.255.255');\n\nmysql> select id, is_ipv4_string(ip_v4) from test_is_ipv4_string order by id;\n+------+-----------------------+\n| id   | is_ipv4_string(ip_v4) |\n+------+-----------------------+\n|    0 |                  NULL |\n|    1 |                     0 |\n|    2 |                     0 |\n|    3 |                     0 |\n|    4 |                     1 |\n+------+-----------------------+\n")),(0,r.yg)("h3",{id:"keywords"},"keywords"),(0,r.yg)("p",null,"IS_IPV4_STRING, IP"))}d.isMDXComponent=!0}}]);